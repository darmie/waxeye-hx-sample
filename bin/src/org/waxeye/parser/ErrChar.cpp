// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_org_waxeye_parser_ErrChar
#include <org/waxeye/parser/ErrChar.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_9f8d7dd962cf060f_14_new,"org.waxeye.parser.ErrChar","new",0x144f1a9f,"org.waxeye.parser.ErrChar.new","org/waxeye/parser/ErrChar.hx",14,0xea70f2d2)
namespace org{
namespace waxeye{
namespace parser{

void ErrChar_obj::__construct( ::Dynamic _hx_char){
            	HX_STACKFRAME(&_hx_pos_9f8d7dd962cf060f_14_new)
HXDLIN(  14)		this->_hx_char = _hx_char;
            	}

Dynamic ErrChar_obj::__CreateEmpty() { return new ErrChar_obj; }

void *ErrChar_obj::_hx_vtable = 0;

Dynamic ErrChar_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ErrChar_obj > _hx_result = new ErrChar_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ErrChar_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x66f49cf5;
}


ErrChar_obj::ErrChar_obj()
{
}

void ErrChar_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ErrChar);
	HX_MARK_MEMBER_NAME(_hx_char,"char");
	HX_MARK_END_CLASS();
}

void ErrChar_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(_hx_char,"char");
}

hx::Val ErrChar_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"char") ) { return hx::Val( _hx_char ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ErrChar_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"char") ) { _hx_char=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ErrChar_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("char","\xd6","\x5e","\xbf","\x41"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ErrChar_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(ErrChar_obj,_hx_char),HX_HCSTRING("char","\xd6","\x5e","\xbf","\x41")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ErrChar_obj_sStaticStorageInfo = 0;
#endif

static ::String ErrChar_obj_sMemberFields[] = {
	HX_HCSTRING("char","\xd6","\x5e","\xbf","\x41"),
	::String(null()) };

static void ErrChar_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ErrChar_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ErrChar_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ErrChar_obj::__mClass,"__mClass");
};

#endif

hx::Class ErrChar_obj::__mClass;

void ErrChar_obj::__register()
{
	hx::Object *dummy = new ErrChar_obj;
	ErrChar_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("org.waxeye.parser.ErrChar","\x2d","\xdf","\xaf","\xad");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ErrChar_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ErrChar_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ErrChar_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ErrChar_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ErrChar_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ErrChar_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace org
} // end namespace waxeye
} // end namespace parser
