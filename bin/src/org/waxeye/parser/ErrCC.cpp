// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_org_waxeye_parser_ErrCC
#include <org/waxeye/parser/ErrCC.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_b57e4feaebde0b1c_14_new,"org.waxeye.parser.ErrCC","new",0xf13bbb89,"org.waxeye.parser.ErrCC.new","org/waxeye/parser/ErrCC.hx",14,0x4dec22e8)
namespace org{
namespace waxeye{
namespace parser{

void ErrCC_obj::__construct( ::Dynamic charClasses){
            	HX_STACKFRAME(&_hx_pos_b57e4feaebde0b1c_14_new)
HXDLIN(  14)		this->charClasses = charClasses;
            	}

Dynamic ErrCC_obj::__CreateEmpty() { return new ErrCC_obj; }

void *ErrCC_obj::_hx_vtable = 0;

Dynamic ErrCC_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ErrCC_obj > _hx_result = new ErrCC_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool ErrCC_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2bd37edf;
}


ErrCC_obj::ErrCC_obj()
{
}

void ErrCC_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(ErrCC);
	HX_MARK_MEMBER_NAME(charClasses,"charClasses");
	HX_MARK_END_CLASS();
}

void ErrCC_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(charClasses,"charClasses");
}

hx::Val ErrCC_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"charClasses") ) { return hx::Val( charClasses ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val ErrCC_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 11:
		if (HX_FIELD_EQ(inName,"charClasses") ) { charClasses=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void ErrCC_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("charClasses","\x70","\x3e","\x16","\x91"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo ErrCC_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(ErrCC_obj,charClasses),HX_HCSTRING("charClasses","\x70","\x3e","\x16","\x91")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *ErrCC_obj_sStaticStorageInfo = 0;
#endif

static ::String ErrCC_obj_sMemberFields[] = {
	HX_HCSTRING("charClasses","\x70","\x3e","\x16","\x91"),
	::String(null()) };

static void ErrCC_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ErrCC_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ErrCC_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ErrCC_obj::__mClass,"__mClass");
};

#endif

hx::Class ErrCC_obj::__mClass;

void ErrCC_obj::__register()
{
	hx::Object *dummy = new ErrCC_obj;
	ErrCC_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("org.waxeye.parser.ErrCC","\x17","\x43","\xeb","\xe9");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = ErrCC_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(ErrCC_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< ErrCC_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ErrCC_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ErrCC_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ErrCC_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace org
} // end namespace waxeye
} // end namespace parser
