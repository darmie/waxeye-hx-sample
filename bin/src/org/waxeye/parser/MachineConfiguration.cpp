// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_org_waxeye_parser_AST
#include <org/waxeye/parser/AST.h>
#endif
#ifndef INCLUDED_org_waxeye_parser_Continuations
#include <org/waxeye/parser/Continuations.h>
#endif
#ifndef INCLUDED_org_waxeye_parser_Exp
#include <org/waxeye/parser/Exp.h>
#endif
#ifndef INCLUDED_org_waxeye_parser_MachineConfiguration
#include <org/waxeye/parser/MachineConfiguration.h>
#endif
#ifndef INCLUDED_org_waxeye_parser_Value
#include <org/waxeye/parser/Value.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3f507730f13ab87f_21_new,"org.waxeye.parser.MachineConfiguration","new",0x97803e8f,"org.waxeye.parser.MachineConfiguration.new","org/waxeye/parser/MachineConfiguration.hx",21,0x72201200)
HX_LOCAL_STACK_FRAME(_hx_pos_3f507730f13ab87f_34_EVAL,"org.waxeye.parser.MachineConfiguration","EVAL",0xdd912e8d,"org.waxeye.parser.MachineConfiguration.EVAL","org/waxeye/parser/MachineConfiguration.hx",34,0x72201200)
HX_LOCAL_STACK_FRAME(_hx_pos_3f507730f13ab87f_40_APPLY,"org.waxeye.parser.MachineConfiguration","APPLY",0xaff1553d,"org.waxeye.parser.MachineConfiguration.APPLY","org/waxeye/parser/MachineConfiguration.hx",40,0x72201200)
namespace org{
namespace waxeye{
namespace parser{

void MachineConfiguration_obj::__construct(::String type, ::org::waxeye::parser::Exp exp,int pos,::Array< ::Dynamic> asts, ::Dynamic err,::Array< ::Dynamic> continuations, ::org::waxeye::parser::Value value){
            	HX_STACKFRAME(&_hx_pos_3f507730f13ab87f_21_new)
HXLINE(  22)		this->type = type;
HXLINE(  23)		this->exp = exp;
HXLINE(  24)		this->pos = pos;
HXLINE(  25)		this->asts = asts;
HXLINE(  26)		this->err = err;
HXLINE(  27)		this->continuations = continuations;
HXLINE(  28)		this->value = value;
            	}

Dynamic MachineConfiguration_obj::__CreateEmpty() { return new MachineConfiguration_obj; }

void *MachineConfiguration_obj::_hx_vtable = 0;

Dynamic MachineConfiguration_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MachineConfiguration_obj > _hx_result = new MachineConfiguration_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6]);
	return _hx_result;
}

bool MachineConfiguration_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x70d69055;
}

 ::org::waxeye::parser::MachineConfiguration MachineConfiguration_obj::EVAL( ::org::waxeye::parser::Exp exp,int pos,::Array< ::Dynamic> asts, ::Dynamic err,::Array< ::Dynamic> continuations){
            	HX_GC_STACKFRAME(&_hx_pos_3f507730f13ab87f_34_EVAL)
HXDLIN(  34)		return  ::org::waxeye::parser::MachineConfiguration_obj::__alloc( HX_CTX ,HX_("EVAL",9c,33,dd,2d),exp,pos,asts,err,continuations,null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(MachineConfiguration_obj,EVAL,return )

 ::org::waxeye::parser::MachineConfiguration MachineConfiguration_obj::APPLY(::Array< ::Dynamic> continuations, ::org::waxeye::parser::Value value){
            	HX_GC_STACKFRAME(&_hx_pos_3f507730f13ab87f_40_APPLY)
HXDLIN(  40)		return  ::org::waxeye::parser::MachineConfiguration_obj::__alloc( HX_CTX ,HX_("APPLY",4e,bd,29,a2),null(),(int)0,null(),null(),continuations,value);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(MachineConfiguration_obj,APPLY,return )


hx::ObjectPtr< MachineConfiguration_obj > MachineConfiguration_obj::__new(::String type, ::org::waxeye::parser::Exp exp,int pos,::Array< ::Dynamic> asts, ::Dynamic err,::Array< ::Dynamic> continuations, ::org::waxeye::parser::Value value) {
	hx::ObjectPtr< MachineConfiguration_obj > __this = new MachineConfiguration_obj();
	__this->__construct(type,exp,pos,asts,err,continuations,value);
	return __this;
}

hx::ObjectPtr< MachineConfiguration_obj > MachineConfiguration_obj::__alloc(hx::Ctx *_hx_ctx,::String type, ::org::waxeye::parser::Exp exp,int pos,::Array< ::Dynamic> asts, ::Dynamic err,::Array< ::Dynamic> continuations, ::org::waxeye::parser::Value value) {
	MachineConfiguration_obj *__this = (MachineConfiguration_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MachineConfiguration_obj), true, "org.waxeye.parser.MachineConfiguration"));
	*(void **)__this = MachineConfiguration_obj::_hx_vtable;
	__this->__construct(type,exp,pos,asts,err,continuations,value);
	return __this;
}

MachineConfiguration_obj::MachineConfiguration_obj()
{
}

void MachineConfiguration_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(MachineConfiguration);
	HX_MARK_MEMBER_NAME(type,"type");
	HX_MARK_MEMBER_NAME(exp,"exp");
	HX_MARK_MEMBER_NAME(pos,"pos");
	HX_MARK_MEMBER_NAME(asts,"asts");
	HX_MARK_MEMBER_NAME(err,"err");
	HX_MARK_MEMBER_NAME(continuations,"continuations");
	HX_MARK_MEMBER_NAME(value,"value");
	HX_MARK_END_CLASS();
}

void MachineConfiguration_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(type,"type");
	HX_VISIT_MEMBER_NAME(exp,"exp");
	HX_VISIT_MEMBER_NAME(pos,"pos");
	HX_VISIT_MEMBER_NAME(asts,"asts");
	HX_VISIT_MEMBER_NAME(err,"err");
	HX_VISIT_MEMBER_NAME(continuations,"continuations");
	HX_VISIT_MEMBER_NAME(value,"value");
}

hx::Val MachineConfiguration_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"exp") ) { return hx::Val( exp ); }
		if (HX_FIELD_EQ(inName,"pos") ) { return hx::Val( pos ); }
		if (HX_FIELD_EQ(inName,"err") ) { return hx::Val( err ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { return hx::Val( type ); }
		if (HX_FIELD_EQ(inName,"asts") ) { return hx::Val( asts ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { return hx::Val( value ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"continuations") ) { return hx::Val( continuations ); }
	}
	return super::__Field(inName,inCallProp);
}

bool MachineConfiguration_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"EVAL") ) { outValue = EVAL_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"APPLY") ) { outValue = APPLY_dyn(); return true; }
	}
	return false;
}

hx::Val MachineConfiguration_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"exp") ) { exp=inValue.Cast<  ::org::waxeye::parser::Exp >(); return inValue; }
		if (HX_FIELD_EQ(inName,"pos") ) { pos=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"err") ) { err=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"type") ) { type=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"asts") ) { asts=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"value") ) { value=inValue.Cast<  ::org::waxeye::parser::Value >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"continuations") ) { continuations=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void MachineConfiguration_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("type","\xba","\xf2","\x08","\x4d"));
	outFields->push(HX_HCSTRING("exp","\x9d","\x0c","\x4d","\x00"));
	outFields->push(HX_HCSTRING("pos","\x94","\x5d","\x55","\x00"));
	outFields->push(HX_HCSTRING("asts","\xf1","\x5a","\x75","\x40"));
	outFields->push(HX_HCSTRING("err","\x65","\x07","\x4d","\x00"));
	outFields->push(HX_HCSTRING("continuations","\xdc","\x24","\x97","\xef"));
	outFields->push(HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo MachineConfiguration_obj_sMemberStorageInfo[] = {
	{hx::fsString,(int)offsetof(MachineConfiguration_obj,type),HX_HCSTRING("type","\xba","\xf2","\x08","\x4d")},
	{hx::fsObject /*::org::waxeye::parser::Exp*/ ,(int)offsetof(MachineConfiguration_obj,exp),HX_HCSTRING("exp","\x9d","\x0c","\x4d","\x00")},
	{hx::fsInt,(int)offsetof(MachineConfiguration_obj,pos),HX_HCSTRING("pos","\x94","\x5d","\x55","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(MachineConfiguration_obj,asts),HX_HCSTRING("asts","\xf1","\x5a","\x75","\x40")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(MachineConfiguration_obj,err),HX_HCSTRING("err","\x65","\x07","\x4d","\x00")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(MachineConfiguration_obj,continuations),HX_HCSTRING("continuations","\xdc","\x24","\x97","\xef")},
	{hx::fsObject /*::org::waxeye::parser::Value*/ ,(int)offsetof(MachineConfiguration_obj,value),HX_HCSTRING("value","\x71","\x7f","\xb8","\x31")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *MachineConfiguration_obj_sStaticStorageInfo = 0;
#endif

static ::String MachineConfiguration_obj_sMemberFields[] = {
	HX_HCSTRING("type","\xba","\xf2","\x08","\x4d"),
	HX_HCSTRING("exp","\x9d","\x0c","\x4d","\x00"),
	HX_HCSTRING("pos","\x94","\x5d","\x55","\x00"),
	HX_HCSTRING("asts","\xf1","\x5a","\x75","\x40"),
	HX_HCSTRING("err","\x65","\x07","\x4d","\x00"),
	HX_HCSTRING("continuations","\xdc","\x24","\x97","\xef"),
	HX_HCSTRING("value","\x71","\x7f","\xb8","\x31"),
	::String(null()) };

static void MachineConfiguration_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MachineConfiguration_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MachineConfiguration_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MachineConfiguration_obj::__mClass,"__mClass");
};

#endif

hx::Class MachineConfiguration_obj::__mClass;

static ::String MachineConfiguration_obj_sStaticFields[] = {
	HX_HCSTRING("EVAL","\x9c","\x33","\xdd","\x2d"),
	HX_HCSTRING("APPLY","\x4e","\xbd","\x29","\xa2"),
	::String(null())
};

void MachineConfiguration_obj::__register()
{
	hx::Object *dummy = new MachineConfiguration_obj;
	MachineConfiguration_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("org.waxeye.parser.MachineConfiguration","\x1d","\x4b","\xa4","\x96");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &MachineConfiguration_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MachineConfiguration_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(MachineConfiguration_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MachineConfiguration_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MachineConfiguration_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MachineConfiguration_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MachineConfiguration_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MachineConfiguration_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace org
} // end namespace waxeye
} // end namespace parser
