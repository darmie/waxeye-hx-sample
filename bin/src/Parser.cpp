// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_Parser
#include <Parser.h>
#endif
#ifndef INCLUDED_org_waxeye_parser_Exp
#include <org/waxeye/parser/Exp.h>
#endif
#ifndef INCLUDED_org_waxeye_parser_Parser
#include <org/waxeye/parser/Parser.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fb5cf68dab09c608_23_new,"Parser","new",0x4fce9d71,"Parser.new","Parser.hx",23,0x8a1d9b1f)
HX_LOCAL_STACK_FRAME(_hx_pos_fb5cf68dab09c608_32_makeDefinition,"Parser","makeDefinition",0x7e82a3b0,"Parser.makeDefinition","Parser.hx",32,0x8a1d9b1f)

void Parser_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_fb5cf68dab09c608_23_new)
HXDLIN(  23)		super::__construct(this->makeDefinition(),HX_("calc",95,18,ba,41));
            	}

Dynamic Parser_obj::__CreateEmpty() { return new Parser_obj; }

void *Parser_obj::_hx_vtable = 0;

Dynamic Parser_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Parser_obj > _hx_result = new Parser_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Parser_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x221d10ff) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x221d10ff;
	} else {
		return inClassId==(int)0x3932f421;
	}
}

 ::Dynamic Parser_obj::makeDefinition(){
            	HX_GC_STACKFRAME(&_hx_pos_fb5cf68dab09c608_32_makeDefinition)
HXLINE(  33)		 ::org::waxeye::parser::Exp def =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("ws",1c,68,00,00)));
HXDLIN(  33)		 ::Dynamic def1 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("exp",9d,0c,4d,00), ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("SEQ",7f,37,3f,00),::cpp::VirtualArray_obj::__new(2)->init(0,def)->init(1, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("sum",8b,a9,57,00))))))
            			->setFixed(1,HX_("mode",63,d3,60,48),HX_("NORMAL",27,1e,ec,e2)));
HXLINE(  35)		 ::org::waxeye::parser::Exp def2 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("prod",97,c7,5e,4a)));
HXLINE(  36)		 ::org::waxeye::parser::Exp def3 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("CHAR_CLASS",af,e2,3f,41),::cpp::VirtualArray_obj::__new(2)->init(0,HX_("+",2b,00,00,00))->init(1,HX_("-",2d,00,00,00)));
HXLINE(  38)		 ::org::waxeye::parser::Exp def4 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("ws",1c,68,00,00)));
HXLINE(  35)		 ::Dynamic def5 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("exp",9d,0c,4d,00), ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("SEQ",7f,37,3f,00),::cpp::VirtualArray_obj::__new(2)->init(0,def2)->init(1, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("STAR",d2,ab,1c,37),::cpp::VirtualArray_obj::__new(1)->init(0, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("SEQ",7f,37,3f,00),::cpp::VirtualArray_obj::__new(3)->init(0,def3)->init(1,def4)->init(2, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("prod",97,c7,5e,4a))))))))))
            			->setFixed(1,HX_("mode",63,d3,60,48),HX_("NORMAL",27,1e,ec,e2)));
HXLINE(  40)		 ::org::waxeye::parser::Exp def6 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("unary",af,55,e1,a6)));
HXLINE(  41)		 ::org::waxeye::parser::Exp def7 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("CHAR_CLASS",af,e2,3f,41),::cpp::VirtualArray_obj::__new(2)->init(0,HX_("*",2a,00,00,00))->init(1,HX_("/",2f,00,00,00)));
HXLINE(  43)		 ::org::waxeye::parser::Exp def8 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("ws",1c,68,00,00)));
HXLINE(  40)		 ::Dynamic def9 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("exp",9d,0c,4d,00), ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("SEQ",7f,37,3f,00),::cpp::VirtualArray_obj::__new(2)->init(0,def6)->init(1, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("STAR",d2,ab,1c,37),::cpp::VirtualArray_obj::__new(1)->init(0, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("SEQ",7f,37,3f,00),::cpp::VirtualArray_obj::__new(3)->init(0,def7)->init(1,def8)->init(2, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("unary",af,55,e1,a6))))))))))
            			->setFixed(1,HX_("mode",63,d3,60,48),HX_("NORMAL",27,1e,ec,e2)));
HXLINE(  45)		 ::org::waxeye::parser::Exp def10 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("CHAR",d6,26,80,2c),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("-",2d,00,00,00)));
HXLINE(  46)		 ::org::waxeye::parser::Exp def11 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("ws",1c,68,00,00)));
HXLINE(  45)		 ::org::waxeye::parser::Exp def12 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("SEQ",7f,37,3f,00),::cpp::VirtualArray_obj::__new(3)->init(0,def10)->init(1,def11)->init(2, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("unary",af,55,e1,a6)))));
HXLINE(  48)		 ::org::waxeye::parser::Exp def13 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("VOID",54,8b,14,39),::cpp::VirtualArray_obj::__new(1)->init(0, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("CHAR",d6,26,80,2c),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("(",28,00,00,00)))));
HXLINE(  49)		 ::org::waxeye::parser::Exp def14 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("ws",1c,68,00,00)));
HXLINE(  50)		 ::org::waxeye::parser::Exp def15 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("sum",8b,a9,57,00)));
HXLINE(  51)		 ::org::waxeye::parser::Exp def16 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("VOID",54,8b,14,39),::cpp::VirtualArray_obj::__new(1)->init(0, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("CHAR",d6,26,80,2c),::cpp::VirtualArray_obj::__new(1)->init(0,HX_(")",29,00,00,00)))));
HXLINE(  48)		 ::org::waxeye::parser::Exp def17 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("SEQ",7f,37,3f,00),::cpp::VirtualArray_obj::__new(5)->init(0,def13)->init(1,def14)->init(2,def15)->init(3,def16)->init(4, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("ws",1c,68,00,00)))));
HXLINE(  45)		 ::Dynamic def18 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("exp",9d,0c,4d,00), ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("ALT",09,95,31,00),::cpp::VirtualArray_obj::__new(3)->init(0,def12)->init(1,def17)->init(2, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("num",46,de,53,00))))))
            			->setFixed(1,HX_("mode",63,d3,60,48),HX_("PRUNING",c7,4e,ce,ec)));
HXLINE(  54)		 ::org::waxeye::parser::Exp def19 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("PLUS",5a,07,1b,35),::cpp::VirtualArray_obj::__new(1)->init(0, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("CHAR_CLASS",af,e2,3f,41),::cpp::VirtualArray_obj::__new(1)->init(0,::cpp::VirtualArray_obj::__new(2)->init(0,HX_("0",30,00,00,00))->init(1,HX_("9",39,00,00,00))))));
HXLINE(  55)		 ::org::waxeye::parser::Exp def20 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("CHAR",d6,26,80,2c),::cpp::VirtualArray_obj::__new(1)->init(0,HX_(".",2e,00,00,00)));
HXDLIN(  55)		 ::org::waxeye::parser::Exp def21 =  ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("OPT",13,38,3c,00),::cpp::VirtualArray_obj::__new(1)->init(0, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("SEQ",7f,37,3f,00),::cpp::VirtualArray_obj::__new(2)->init(0,def20)->init(1, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("PLUS",5a,07,1b,35),::cpp::VirtualArray_obj::__new(1)->init(0, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("CHAR_CLASS",af,e2,3f,41),::cpp::VirtualArray_obj::__new(1)->init(0,::cpp::VirtualArray_obj::__new(2)->init(0,HX_("0",30,00,00,00))->init(1,HX_("9",39,00,00,00))))))))));
HXLINE(  54)		 ::Dynamic def22 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("exp",9d,0c,4d,00), ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("SEQ",7f,37,3f,00),::cpp::VirtualArray_obj::__new(3)->init(0,def19)->init(1,def21)->init(2, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("NT",46,44,00,00),::cpp::VirtualArray_obj::__new(1)->init(0,HX_("ws",1c,68,00,00))))))
            			->setFixed(1,HX_("mode",63,d3,60,48),HX_("NORMAL",27,1e,ec,e2)));
HXLINE(  33)		 ::Dynamic def23 =  ::Dynamic(hx::Anon_obj::Create(6)
            			->setFixed(0,HX_("unary",af,55,e1,a6),def18)
            			->setFixed(1,HX_("ws",1c,68,00,00), ::Dynamic(hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("exp",9d,0c,4d,00), ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("STAR",d2,ab,1c,37),::cpp::VirtualArray_obj::__new(1)->init(0, ::org::waxeye::parser::Exp_obj::__alloc( HX_CTX ,HX_("CHAR_CLASS",af,e2,3f,41),::cpp::VirtualArray_obj::__new(3)->init(0,::cpp::VirtualArray_obj::__new(2)->init(0,HX_("\t",09,00,00,00))->init(1,HX_("\n",0a,00,00,00)))->init(1,HX_("\r",0d,00,00,00))->init(2,HX_(" ",20,00,00,00))))))
            				->setFixed(1,HX_("mode",63,d3,60,48),HX_("VOIDING",ee,e9,d1,c3))))
            			->setFixed(2,HX_("num",46,de,53,00),def22)
            			->setFixed(3,HX_("sum",8b,a9,57,00),def5)
            			->setFixed(4,HX_("calc",95,18,ba,41),def1)
            			->setFixed(5,HX_("prod",97,c7,5e,4a),def9));
HXLINE(  62)		return def23;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,makeDefinition,return )


hx::ObjectPtr< Parser_obj > Parser_obj::__new() {
	hx::ObjectPtr< Parser_obj > __this = new Parser_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Parser_obj > Parser_obj::__alloc(hx::Ctx *_hx_ctx) {
	Parser_obj *__this = (Parser_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Parser_obj), true, "Parser"));
	*(void **)__this = Parser_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Parser_obj::Parser_obj()
{
}

hx::Val Parser_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 14:
		if (HX_FIELD_EQ(inName,"makeDefinition") ) { return hx::Val( makeDefinition_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Parser_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Parser_obj_sStaticStorageInfo = 0;
#endif

static ::String Parser_obj_sMemberFields[] = {
	HX_HCSTRING("makeDefinition","\x21","\x09","\x3e","\x87"),
	::String(null()) };

static void Parser_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Parser_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Parser_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Parser_obj::__mClass,"__mClass");
};

#endif

hx::Class Parser_obj::__mClass;

void Parser_obj::__register()
{
	hx::Object *dummy = new Parser_obj;
	Parser_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Parser","\xff","\x10","\x1d","\x22");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Parser_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Parser_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Parser_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Parser_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Parser_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Parser_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

