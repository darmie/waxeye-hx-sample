// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_org_waxeye_parser_ErrChar
#define INCLUDED_org_waxeye_parser_ErrChar

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_9f8d7dd962cf060f_14_new)
HX_DECLARE_CLASS3(org,waxeye,parser,ErrChar)

namespace org{
namespace waxeye{
namespace parser{


class HXCPP_CLASS_ATTRIBUTES ErrChar_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef ErrChar_obj OBJ_;
		ErrChar_obj();

	public:
		enum { _hx_ClassId = 0x66f49cf5 };

		void __construct( ::Dynamic _hx_char);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="org.waxeye.parser.ErrChar")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"org.waxeye.parser.ErrChar"); }

		hx::ObjectPtr< ErrChar_obj > __new( ::Dynamic _hx_char) {
			hx::ObjectPtr< ErrChar_obj > __this = new ErrChar_obj();
			__this->__construct(_hx_char);
			return __this;
		}

		static hx::ObjectPtr< ErrChar_obj > __alloc(hx::Ctx *_hx_ctx, ::Dynamic _hx_char) {
			ErrChar_obj *__this = (ErrChar_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(ErrChar_obj), true, "org.waxeye.parser.ErrChar"));
			*(void **)__this = ErrChar_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_9f8d7dd962cf060f_14_new)
HXDLIN(  14)		( ( ::org::waxeye::parser::ErrChar)(__this) )->_hx_char = _hx_char;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~ErrChar_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("ErrChar","\xbb","\xd0","\x3e","\x9a"); }

		 ::Dynamic _hx_char;
};

} // end namespace org
} // end namespace waxeye
} // end namespace parser

#endif /* INCLUDED_org_waxeye_parser_ErrChar */ 
