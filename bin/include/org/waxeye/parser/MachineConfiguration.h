// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_org_waxeye_parser_MachineConfiguration
#define INCLUDED_org_waxeye_parser_MachineConfiguration

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(org,waxeye,parser,AST)
HX_DECLARE_CLASS3(org,waxeye,parser,Continuations)
HX_DECLARE_CLASS3(org,waxeye,parser,Exp)
HX_DECLARE_CLASS3(org,waxeye,parser,MachineConfiguration)
HX_DECLARE_CLASS3(org,waxeye,parser,Value)

namespace org{
namespace waxeye{
namespace parser{


class HXCPP_CLASS_ATTRIBUTES MachineConfiguration_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef MachineConfiguration_obj OBJ_;
		MachineConfiguration_obj();

	public:
		enum { _hx_ClassId = 0x70d69055 };

		void __construct(::String type, ::org::waxeye::parser::Exp exp,int pos,::Array< ::Dynamic> asts, ::Dynamic err,::Array< ::Dynamic> continuations, ::org::waxeye::parser::Value value);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="org.waxeye.parser.MachineConfiguration")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"org.waxeye.parser.MachineConfiguration"); }
		static hx::ObjectPtr< MachineConfiguration_obj > __new(::String type, ::org::waxeye::parser::Exp exp,int pos,::Array< ::Dynamic> asts, ::Dynamic err,::Array< ::Dynamic> continuations, ::org::waxeye::parser::Value value);
		static hx::ObjectPtr< MachineConfiguration_obj > __alloc(hx::Ctx *_hx_ctx,::String type, ::org::waxeye::parser::Exp exp,int pos,::Array< ::Dynamic> asts, ::Dynamic err,::Array< ::Dynamic> continuations, ::org::waxeye::parser::Value value);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~MachineConfiguration_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("MachineConfiguration","\xcf","\xf8","\xf6","\x90"); }

		static  ::org::waxeye::parser::MachineConfiguration EVAL( ::org::waxeye::parser::Exp exp,int pos,::Array< ::Dynamic> asts, ::Dynamic err,::Array< ::Dynamic> continuations);
		static ::Dynamic EVAL_dyn();

		static  ::org::waxeye::parser::MachineConfiguration APPLY(::Array< ::Dynamic> continuations, ::org::waxeye::parser::Value value);
		static ::Dynamic APPLY_dyn();

		::String type;
		 ::org::waxeye::parser::Exp exp;
		int pos;
		::Array< ::Dynamic> asts;
		 ::Dynamic err;
		::Array< ::Dynamic> continuations;
		 ::org::waxeye::parser::Value value;
};

} // end namespace org
} // end namespace waxeye
} // end namespace parser

#endif /* INCLUDED_org_waxeye_parser_MachineConfiguration */ 
